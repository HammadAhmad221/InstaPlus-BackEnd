# AWSTemplateFormatVersion: '2010-09-09'
# Transform: AWS::Serverless-2016-10-31
# Globals:
#   Function:
#     Runtime: nodejs14.x
#     Timeout: 10

# Resources:

#   AuthorizationApiGateway:
#     Type: AWS::Serverless::Api
#     Properties:
#       StageName: Prod
#       Auth:
#         DefaultAuthorizer: MyLambdaTokenAuthorizer
#         Authorizers:
#           MyLambdaTokenAuthorizer:
#             FunctionPayloadType: TOKEN
#             FunctionArn: !GetAtt testFunc.Arn
#   testFunc:
#     Type: AWS::Serverless::Function
#     Properties:
#       CodeUri: src/lambda/authorizer/
#       Handler: src/lambda/authorizer/auth.handler
#       Runtime: nodejs14.x
#       Events:
#         GetRoot:
#           Type: Api
#           Properties:
#             RestApiId: !Ref AuthorizationApiGateway
#             Path: /auth
#             Method: get
#     Metadata: # Manage esbuild properties
#       BuildMethod: esbuild
#       BuildProperties:
#         Minify: true
#         Target: es2020
#         Sourcemap: true
#         EntryPoints:
#           - auth.ts
#   # Authorizer:
#   #   Type: AWS::Serverless::Function
#   #   Properties:
#   #     CodeUri: src/lambda/authorizer/
#   #     Handler: auth.handler
#   #     Runtime: nodejs14.x
#   #   Metadata: # Manage esbuild properties
#   #     BuildMethod: esbuild
#   #     BuildProperties:
#   #       Minify: true
#   #       Target: es2020
#   #       Sourcemap: true
#   #       EntryPoints:
#   #         - auth.ts
#   Layers:
#     Type: AWS::Serverless::LayerVersion
#     Properties:
#       LayerName: Layers
#       ContentUri: src/lambda/layers/
#       CompatibleRuntimes:
#         - nodejs14.x
#   UsersPost:
#     Type: AWS::Serverless::Function
#     Properties:
#       CodeUri: src/lambda/users/
#       Handler: src/lambda/users/app.handler
#       Runtime: nodejs14.x
#       Layers:
#         - !Ref Layers
#       Events:
#         UsersApi:
#           Type: Api
#           Properties:
#             Path: /users
#             Method: get
#             RestApiId: !Ref AuthorizationApiGateway
#             Auth:
#               Authorizer: testFunc
#               # Authorizer: MyLambdaTokenAuthorizer
#     Metadata: # Manage esbuild properties
#       BuildMethod: esbuild
#       BuildProperties:
#         Minify: true
#         Target: es2020
#         Sourcemap: true
#         EntryPoints:
#         - app.ts

# Outputs:
#   # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
#   # Find out more about other implicit resources you can reference within SAM
#   # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
#   InstaPlusApi:
#     Description: API Gateway endpoint URL for Prod stage for Insta Plus function
#     Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"

AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Globals:
  Function:
    Runtime: nodejs14.x
    Timeout: 10

Resources:
  TestFuncAuthorizer:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambda/authorizer/
      Handler: src/lambda/authorizer/auth.handler
      Runtime: nodejs14.x
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - auth.ts

  AuthorizationApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        DefaultAuthorizer: TestFuncAuthorizer  # Updated the authorizer name here
        Authorizers:
          TestFuncAuthorizer:  # Updated the authorizer name here
            FunctionPayloadType: TOKEN
            FunctionArn: !GetAtt TestFuncAuthorizer.Arn

  Layers:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: Layers
      ContentUri: src/lambda/layers/
      CompatibleRuntimes:
        - nodejs14.x

  UsersPost:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambda/users/
      Handler: src/lambda/users/app.handler
      Runtime: nodejs14.x
      Layers:
        - !Ref Layers
      Events:
        UsersApi:
          Type: Api
          Properties:
            Path: /users
            Method: get
            RestApiId: !Ref AuthorizationApiGateway
            Auth:
              Authorizer: TestFuncAuthorizer
              AuthorizationScopes:  
              - user.read  # Updated the authorizer name here
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

Outputs:
  InstaPlusApi:
    Description: API Gateway endpoint URL for Prod stage for Insta Plus function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"
