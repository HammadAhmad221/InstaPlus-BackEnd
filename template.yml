AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Globals:
  Function:
    Runtime: nodejs14.x
    Timeout: 100

Resources:
  Authorizer:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambda/authorizer/
      Handler: src/lambda/authorizer/auth.handler
      Runtime: nodejs14.x
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - auth.ts

  AuthorizationApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        DefaultAuthorizer: Authorizer  # Updated the authorizer name here
        Authorizers:
          Authorizer:  # Updated the authorizer name here
            FunctionPayloadType: TOKEN
            FunctionArn: !GetAtt Authorizer.Arn

  Layers:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: Layers
      ContentUri: src/lambda/layers/
      CompatibleRuntimes:
        - nodejs14.x

  InstallmentCrud:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambda/installmentService/
      Handler: src/lambda/installmentService/app.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Layers:
        - !Ref Layers
      Events:
        UsersApi:
          Type: Api
          Properties:
            Path: /installment
            Method: Post
            # RestApiId: !Ref AuthorizationApiGateway
            # Auth:
            #   Authorizer: Authorizer
            #   AuthorizationScopes:  
            #   - user.read  # Updated the authorizer name here
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts
  
  InstallmentPlanCrud:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambda/planService/
      Handler: src/lambda/planService/app.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Layers:
        - !Ref Layers
      Events:
        UsersApi:
          Type: Api
          Properties:
            Path: /plan
            Method: Post
            # RestApiId: !Ref AuthorizationApiGateway
            # Auth:
            #   Authorizer: Authorizer
            #   AuthorizationScopes:  
            #   - user.read  # Updated the authorizer name here
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

  GeneratePreSignedUrl:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambda/generatePresignedUrl/
      Handler: src/lambda/generatePresignedUrl/app.handler
      Runtime: nodejs14.x
      MemorySize: 512
      Layers:
        - !Ref Layers
      Events:
        UsersApi:
          Type: Api
          Properties:
            Path: /generatePresignedUrl
            Method: Get
            # RestApiId: !Ref AuthorizationApiGateway
            # Auth:
            #   Authorizer: Authorizer
            #   AuthorizationScopes:  
            #   - user.read  # Updated the authorizer name here
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

  ActivateSubscription:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambda/activateSubscription/
      Handler: src/lambda/activateSubscription/app.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Layers:
        - !Ref Layers
      Events:
        UsersApi:
          Type: Api
          Properties:
            Path: /activateSubscription
            Method: Get
            # RestApiId: !Ref AuthorizationApiGateway
            # Auth:
            #   Authorizer: Authorizer
            #   AuthorizationScopes:  
            #   - user.read  # Updated the authorizer name here
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

  UploadProfile:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambda/uploadProfile/
      Handler: src/lambda/uploadProfile/app.handler
      Runtime: nodejs14.x
      MemorySize: 512
      Layers:
        - !Ref Layers
      Events:
        UsersApi:
          Type: Api
          Properties:
            Path: /uploadProfile
            Method: Post
            # RestApiId: !Ref AuthorizationApiGateway
            # Auth:
            #   Authorizer: Authorizer
            #   AuthorizationScopes:  
            #   - user.read  # Updated the authorizer name here
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

  GaurantorCrud:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambda/gurantorService/
      Handler: src/lambda/gurantorService/app.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Layers:
        - !Ref Layers
      Events:
        UsersApi:
          Type: Api
          Properties:
            Path: /gurantor
            Method: Post
            # RestApiId: !Ref AuthorizationApiGateway
            # Auth:
            #   Authorizer: Authorizer
            #   AuthorizationScopes:  
            #   - user.read  # Updated the authorizer name here
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts
  ProductCrud:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambda/productService/
      Handler: src/lambda/productService/app.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Layers:
        - !Ref Layers
      Events:
        UsersApi:
          Type: Api
          Properties:
            Path: /product
            Method: Post
            # RestApiId: !Ref AuthorizationApiGateway
            # Auth:
            #   Authorizer: Authorizer
            #   AuthorizationScopes:  
            #   - user.read  # Updated the authorizer name here
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

  GetCustomersInstallments:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambda/getCustomerInstallments/
      Handler: src/lambda/getCustomerInstallments/app.handler
      Runtime: nodejs14.x
      MemorySize: 64
      Layers:
        - !Ref Layers
      Events:
        UsersApi:
          Type: Api
          Properties:
            Path: /getCustomerInstallments
            Method: Get
            # RestApiId: !Ref AuthorizationApiGateway
            # Auth:
            #   Authorizer: Authorizer
            #   AuthorizationScopes:  
            #   - user.read  # Updated the authorizer name here
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

  SubscriptionCrud:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambda/subscriptionService/
      Handler: src/lambda/subscriptionService/app.handler
      Runtime: nodejs14.x
      MemorySize: 64
      Layers:
        - !Ref Layers
      Events:
        UsersApi:
          Type: Api
          Properties:
            Path: /subscription
            Method: Post
            # RestApiId: !Ref AuthorizationApiGateway
            # Auth:
            #   Authorizer: Authorizer
            #   AuthorizationScopes:  
            #   - user.read  # Updated the authorizer name here
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

  getCustomersByownerId:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambda/getCustomersByOwnerId/
      Handler: src/lambda/getCustomersByOwnerId/app.handler
      Runtime: nodejs14.x
      MemorySize: 512
      Layers:
        - !Ref Layers
      Events:
        UsersApi:
          Type: Api
          Properties:
            Path: /getCustomersByOwnerId
            Method: Get
            # RestApiId: !Ref AuthorizationApiGateway
            # Auth:
            #   Authorizer: Authorizer
            #   AuthorizationScopes:  
            #   - user.read  # Updated the authorizer name here
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

  getInstallmentsPlanByAuthor:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambda/getInstallmentPlansByAuthor/
      Handler: src/lambda/getInstallmentPlansByAuthor/app.handler
      Runtime: nodejs14.x
      MemorySize: 512
      Layers:
        - !Ref Layers
      Events:
        UsersApi:
          Type: Api
          Properties:
            Path: /getInstallmentPlansByAuthor
            Method: Get
            # RestApiId: !Ref AuthorizationApiGateway
            # Auth:
            #   Authorizer: Authorizer
            #   AuthorizationScopes:  
            #   - user.read  # Updated the authorizer name here
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

  getInstallmentsBysubscriptionId:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambda/getInstallmentsBySubId/
      Handler: src/lambda/getInstallmentsBySubId/app.handler
      Runtime: nodejs14.x
      MemorySize: 512
      Layers:
        - !Ref Layers
      Events:
        UsersApi:
          Type: Api
          Properties:
            Path: /getInstallmentsBySubId
            Method: Get
            # RestApiId: !Ref AuthorizationApiGateway
            # Auth:
            #   Authorizer: Authorizer
            #   AuthorizationScopes:  
            #   - user.read  # Updated the authorizer name here
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts
  
  GetSubscriptionsbycustomerId:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambda/getSubscriptionsBycustomerId/
      Handler: src/lambda/getSubscriptionsBycustomerId/app.handler
      Runtime: nodejs14.x
      MemorySize: 512
      Timeout: 30
      Layers:
        - !Ref Layers
      Events:
        UsersApi:
          Type: Api
          Properties:
            Path: /getSubscriptionsBycustomerId
            Method: Get
            # RestApiId: !Ref AuthorizationApiGateway
            # Auth:
            #   Authorizer: Authorizer
            #   AuthorizationScopes:  
            #   - user.read  # Updated the authorizer name here
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts
  
  GetPendingSubscriptions:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambda/getpendingSubscriptions/
      Handler: src/lambda/getpendingSubscriptions/app.handler
      Runtime: nodejs14.x
      MemorySize: 512
      Timeout: 30
      Layers:
        - !Ref Layers
      Events:
        UsersApi:
          Type: Api
          Properties:
            Path: /getpendingSubscriptions
            Method: Get
            # RestApiId: !Ref AuthorizationApiGateway
            # Auth:
            #   Authorizer: Authorizer
            #   AuthorizationScopes:  
            #   - user.read  # Updated the authorizer name here
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts
  
  
  GetSubscriptionsbyownerId:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambda/getSubscriptions/
      Handler: src/lambda/getSubscriptions/app.handler
      Runtime: nodejs14.x
      MemorySize: 512
      Timeout: 30
      Layers:
        - !Ref Layers
      Events:
        UsersApi:
          Type: Api
          Properties:
            Path: /getSubscriptions
            Method: Get
            # RestApiId: !Ref AuthorizationApiGateway
            # Auth:
            #   Authorizer: Authorizer
            #   AuthorizationScopes:  
            #   - user.read  # Updated the authorizer name here
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

  DocumentCrud:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambda/documentService/
      Handler: src/lambda/documentService/app.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Layers:
        - !Ref Layers
      Events:
        UsersApi:
          Type: Api
          Properties:
            Path: /document
            Method: Post
            # RestApiId: !Ref AuthorizationApiGateway
            # Auth:
            #   Authorizer: Authorizer
            #   AuthorizationScopes:  
            #   - user.read  # Updated the authorizer name here
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts
  
  UsersPost:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/lambda/users/
      Handler: src/lambda/users/app.handler
      Runtime: nodejs14.x
      MemorySize: 1024
      Layers:
        - !Ref Layers
      Events:
        UsersApi:
          Type: Api
          Properties:
            Path: /users
            Method: Post
            # RestApiId: !Ref AuthorizationApiGateway
            # Auth:
            #   Authorizer: None
            #   AuthorizationScopes:  
            #   - user.read  
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

Outputs:
  InstaPlusApi:
    Description: API Gateway endpoint URL for Prod stage for Insta Plus function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"
